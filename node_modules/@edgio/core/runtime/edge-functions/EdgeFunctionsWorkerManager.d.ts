/// <reference types="node" />
import RequestContext from '../RequestContext';
import EdgeFunctionResponse from './EdgeFunctionResponse';
export default class EdgeFunctionsWorkerManager {
    private context;
    private worker;
    private semaphore;
    private dataLength;
    private exchangeBuffer;
    private channel;
    private readyResponses;
    private outstandingFetchesCount;
    private workerIsWaiting;
    private static fetchImpl;
    constructor(context: RequestContext, rawBody: Buffer | undefined, path: string, envVars: Map<string, string>, usrVars: Map<string, string>);
    protected getWorkerFilename(): string;
    runEdgeFunction(): Promise<EdgeFunctionResponse>;
    issueFetch(requestId: number, ...fetchArgs: any[]): Promise<void>;
    private addReadyResponse;
    private sendNextReadyResponse;
    private copyDataToExchangeBuffer;
    private wakeWorker;
    static setFetchImpl(fetchFunc: any): void;
}
