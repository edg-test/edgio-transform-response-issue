"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConfigSrcPath = exports.getRouterSrcPath = exports.pathForBackend = exports.STATIC_ASSET_MANIFEST_FILE_NAME = exports.CONFIG_FILE_NAME = exports.ROUTES_FILE_NAME = exports.SOURCES_DIR = exports.PERMANENT_ASSETS_DIR = exports.ASSETS_DIR = exports.EDGE_FUNCTIONS_QUICKJS_BYTECODE_PATH = exports.EDGE_FUNCTIONS_QUICKJS_BYTECODE_FILENAME = exports.EDGE_FUNCTIONS_INDEX_PATH = exports.EDGE_FUNCTIONS_INDEX_FILENAME = exports.JS_DIR = exports.EDGIO_DIR = void 0;
const fs_1 = require("fs");
const path_1 = require("path");
/**
 * The .edgio build directory
 */
exports.EDGIO_DIR = '.edgio';
/**
 * The destination directory for JS server code
 */
exports.JS_DIR = (0, path_1.join)(exports.EDGIO_DIR, 'lambda');
/**
 * The name of the bundled edge functions index file
 */
exports.EDGE_FUNCTIONS_INDEX_FILENAME = '__edge-functions__.js';
/**
 * The path to the edge functions index file
 */
exports.EDGE_FUNCTIONS_INDEX_PATH = (0, path_1.join)(exports.JS_DIR, exports.EDGE_FUNCTIONS_INDEX_FILENAME);
/**
 * The name of the bundled edge functions index compiled QuickJS bytecode file
 */
exports.EDGE_FUNCTIONS_QUICKJS_BYTECODE_FILENAME = '__edge-functions__.qbc';
/**
 * The path to the bundled edge functions index compiled QuickJS bytecode file
 */
exports.EDGE_FUNCTIONS_QUICKJS_BYTECODE_PATH = (0, path_1.join)(exports.JS_DIR, exports.EDGE_FUNCTIONS_QUICKJS_BYTECODE_FILENAME);
/**
 * The destination directory for static assets
 */
exports.ASSETS_DIR = (0, path_1.join)(exports.EDGIO_DIR, 's3');
exports.PERMANENT_ASSETS_DIR = (0, path_1.join)(exports.EDGIO_DIR, 's3-permanent');
/**
 * The directory into which source code is copied for debugging purposes
 */
exports.SOURCES_DIR = (0, path_1.join)(exports.EDGIO_DIR, 'src');
/**
 * The name of the compiled routes file
 */
exports.ROUTES_FILE_NAME = 'routes.cjs';
/**
 * The name of the compiled edgio config file
 */
exports.CONFIG_FILE_NAME = 'edgio.config.js';
/**
 * The static asset manifest file name
 * @private
 */
exports.STATIC_ASSET_MANIFEST_FILE_NAME = 'static-asset-manifest.json';
/**
 * Returns the destination path within the lambda dir for the specified backend
 * @param backend A backend name
 * @return a file path
 */
function pathForBackend(backend) {
    return (0, path_1.join)('__backends__', `${backend}.js`);
}
exports.pathForBackend = pathForBackend;
/**
 * Returns the path to the router source file.
 * @param config The config from edgio.config.js
 * @returns
 */
function getRouterSrcPath(config) {
    const result = (config.routes ? [config.routes] : ['routes.js', 'routes.ts', 'routes.cjs']).find(file => (0, fs_1.existsSync)((0, path_1.join)(process.cwd(), file)));
    if (result == null) {
        const srcFile = config.routes || `routes.js, routes.ts, or routes.cjs`;
        throw new Error(`Edgio routes file not found. Please create ${srcFile} in the root directory of your project.`);
    }
    return result;
}
exports.getRouterSrcPath = getRouterSrcPath;
/**
 * Gets the path to edgio.config.js
 * @returns
 */
function getConfigSrcPath() {
    const cwd = process.cwd();
    const result = [(0, path_1.join)(cwd, 'edgio.config.js'), (0, path_1.join)(cwd, 'edgio.config.cjs')].find(fs_1.existsSync);
    if (result == null) {
        throw new Error('Edgio config file not found. Please create edgio.config.js or edgio.config.cjs in the root directory of your project.');
    }
    return result;
}
exports.getConfigSrcPath = getConfigSrcPath;
