"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const EdgeFunctionsBuilder_1 = __importDefault(require("./EdgeFunctionsBuilder"));
const EdgeFunctionCompiler_1 = require("../../runtime/edge-functions/EdgeFunctionCompiler");
let cachedIndexCodeTemplate;
/**
 * The edge functions builder for web browser environment.
 * This builder doesn't allow to use imports in edge functions.
 * This builder will insert all edge functions into prebuilt 'edgeFunctionsIndexCodeTemplate' file with sdk and edge functions.
 * The index file is then compiled to QuickJS bytecode.
 */
class EdgeFunctionsBrowserBuilder extends EdgeFunctionsBuilder_1.default {
    /**
     * @param rules The router rules
     * @param readFileImpl The function to read file content from filesystem. Can either be fs.readFileSync or mock function.
     */
    constructor(rules, readFileImpl) {
        super(rules);
        this.readFileImpl = readFileImpl;
    }
    /**
     * Loads the edge function code from the specified file path,
     * finds the default export and returns the code as string which can later be inserted into edge functions map.
     * The default export is transformed to variable.
     * @example "export default function() {}" => "const defaultExport = function() {}"
     */
    getFunctionCode(srcPath) {
        const defaultExportPatterns = [
            /export[\s]+default[\s]+/,
            /exports\.default[\s]+=[\s]+/,
            /module\.exports\.default[\s]+=[\s]+/,
            /module\.exports[\s]+=[\s]+/,
        ];
        const fileContent = this.readFileImpl(srcPath).toString();
        const defaultExport = `const ${this.functionDefaultExportName} = `;
        for (const pattern of defaultExportPatterns) {
            if (pattern.test(fileContent))
                return fileContent.replace(pattern, defaultExport).trim();
        }
        throw new Error(`No default export was found for: '${srcPath}'`);
    }
    /**
     * Returns the code of prebuilt the index code template.
     * In browser environment, the index code template fetched from root path.
     */
    async getIndexCodeTemplate() {
        if (cachedIndexCodeTemplate)
            return cachedIndexCodeTemplate;
        const res = await fetch(`/${this.indexCodeTemplateFilename}`);
        if (!res.ok)
            throw new Error(`Failed to load '${this.indexCodeTemplateFilename}'`);
        cachedIndexCodeTemplate = await res.text();
        return cachedIndexCodeTemplate;
    }
    /**
     * Builds the edge functions and returns the compiled bytecode.
     */
    async build() {
        const indexCode = await this.getIndexCode();
        // Unlike in nodejs, the imports in edge functions will not work in the browser.
        return (0, EdgeFunctionCompiler_1.compileEdgeFunction)(indexCode);
    }
}
exports.default = EdgeFunctionsBrowserBuilder;
